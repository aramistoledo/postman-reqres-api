name: Postman Teste reqres Api

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Step 1 Check version Newman and Node
        run: |
          newman --version
          node --version

      - name: Step 2 Install Newman-Reporter-Allure
        run: sudo npm install -g newman-reporter-allure

      - name: Step 3 Execute collection
        run: newman run ./reqres-api.json -r allure --reporter-allure-export ./allure-results

      - name: Step 4 Archive Allure results
        uses: actions/upload-artifact@v2
        with:
          name: allure-results
          path: ./allure-results

      - name: Download and Install Allure CLI
        run: |
          wget https://github.com/allure-framework/allure2/releases/latest/download/allure-2.16.0.zip
          unzip allure-2.16.0.zip -d allure
          sudo ln -s allure/allure-2.16.0/bin/allure /usr/bin/allure

      - name: Step 5 Generate Allure Report
        run: |
          allure generate ./allure-results -o ./allure-report
          echo "ALLURE_REPORT_PATH=$(realpath ./allure-report)" >> $GITHUB_ENV

      - name: Install @actions/github
        run: npm install @actions/github

      - name: Step 6 Create Report Link Comment
        run: |
          node -e '
          const { getOctokit, context } = require("@actions/github");
          const reportPath = process.env.ALLURE_REPORT_PATH;
          const reportURL = `https://github.com/${context.repo.owner}/${context.repo.repo}/blob/${context.sha}${reportPath}`;
          const octokit = getOctokit(process.env.GITHUB_TOKEN);

          octokit.rest.issues.createComment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.issue.number,
            body: `The test report is available [here](${reportURL}).`
          });
          '
